pipeline {
    agent { label 'Agent' }

    environment {
        BRANCH = "${env.BRANCH_NAME}"
    }

    stages {
        stage('Checkout') {
             when {
                branch 'dev'
            }
            steps {
                git url: 'https://github.com/artisantek/jenkins.git'
            }
        }

        stage('Unit Tests') {
             when {
                branch 'dev'
            }
            steps {
                dir('javaapp-pipeline') {
                    sh 'mvn clean test'
                }
            }
        }

        stage('Trivy Scan') {
             when {
                branch 'dev'
            }
            steps {
                dir('javaapp-pipeline') {
                    sh '''
                        wget -q https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl -O html.tpl
                        trivy fs --format template --template "@html.tpl" -o report.html .
                    '''
                }
            }
        }

        stage('Sonar Analysis') {
             when {
                branch 'dev'
            }
            steps {
                dir('javaapp-pipeline') {
                    withSonarQubeEnv('sonar') {
                        sh '''
                            mvn verify sonar:sonar \
                            -Dsonar.projectKey=java-app \
                            -Dsonar.projectName=java-app 
                        '''
                    }
                }
            }
        }

        stage('Build') {
            when {
                branch 'main'
            }
            steps {
                dir('javaapp-pipeline') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Deploy') {
            when {
                branch 'main'
            }
            steps {
                dir('javaapp-pipeline/target') {
                    sh '''
                        if pgrep -f "java -jar java-sample-21-1.0.0.jar" > /dev/null; then
                            pkill -f "java -jar java-sample-21-1.0.0.jar"
                            echo "App was running and has been killed."
                        else
                            echo "App is not running."
                        fi
                        JENKINS_NODE_COOKIE=dontKillMe nohup java -jar java-sample-21-1.0.0.jar > app.log 2>&1 &
                    '''
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline run completed for branch: ${env.BRANCH_NAME}"
        }
    }
}
